@* --------------------------------------------------------------------------------------------------------------------
// <copyright file="Album.cshtml" company="Devbridge Group LLC">
// 
// Copyright (C) 2015,2016 Devbridge Group LLC
// 
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
// 
// You should have received a copy of the GNU Lesser General Public License
// along with this program.  If not, see http://www.gnu.org/licenses/. 
// </copyright>
// 
// <summary>
// Better CMS is a publishing focused and developer friendly .NET open source CMS.
// 
// Website: https://www.bettercms.com 
// GitHub: https://github.com/devbridge/bettercms
// Email: info@bettercms.com
// </summary>
// -------------------------------------------------------------------------------------------------------------------- *@
@using BetterCms.Module.ImagesGallery
@model BetterCms.Module.ImagesGallery.ViewModels.AlbumViewModel

@if (Model.LoadCmsStyles)
{
    @Html.Partial("Partial/AlbumStyles")
}

@if (Model.RenderHeader)
{
    <h1 class="bcms-gallery-title">
        @Model.Title
        @if (Model.RenderBackUrl)
        {
            <a class="bcms-gallery-back-link" href="javascript:history.back()">< Back</a>
        }
        @if (Model.LastUpdateDate.HasValue)
        {
            <time datetime="@Model.LastUpdateDate.Value.ToString(ImagesGalleryModuleConstants.GalleryWidgetUpdateDateTagFormat)">@Model.LastUpdateDate.Value.ToString(ImagesGalleryModuleConstants.GalleryWidgetUpdateDateDisplayFormat)</time>
        }
    </h1>
}

@{
    var i = 0;
    var l = Model.Images.Count;
    var perSection = Model.ImagesPerSection <= 0 ? (Model.ImagesCount >= 0 ? Model.ImagesCount : int.MaxValue) : Model.ImagesPerSection;
    
    foreach (var image in Model.Images)
    {
        if (i % perSection == 0)
        {
            @:<section>
        }
        
        <div class="bcms-gallery-image-holder">
            <img src="@image.Url" alt="@image.Caption" data-title="@image.Title" />
            <div class="bcms-gallery-image-name">
                <h4><a href="@image.Url" target="blank">@image.Caption</a></h4>
            </div>
        </div>

        i++;

        if (i % perSection == 0 || i == l)
        {
            @:</section>
        }
    }
}
